{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "CancelDecreaseCoverEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DecreaseCoverEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DecreaseCoverScheduledEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DepositEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "eraId",
						"type": "uint128"
					}
				],
				"name": "MemberHasZeroPoints",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "member",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "eraId",
						"type": "uint128"
					}
				],
				"name": "MemberNotActive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "delegator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PayoutEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "eraId",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "coverClaims",
						"type": "uint256"
					}
				],
				"name": "ReportPushedEvent",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "AUTH_MANAGER",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DEPOSIT_STAKING",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ERAS_BETWEEN_FORCED_UNDELEGATION",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_DEPOSIT_TOTAL",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_DEPOSIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_PAYOUT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ORACLE_MASTER",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "STAKE_UNIT_COVER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cancelDecreaseCover",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "coverOwedTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "candidateDelegationCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "delegatorDelegationCount",
						"type": "uint256"
					}
				],
				"name": "delegate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "delegatorNotPaid",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "more",
						"type": "uint256"
					}
				],
				"name": "delegator_bond_more",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collator",
						"type": "address"
					}
				],
				"name": "depositCover",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "eraId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "erasCovered",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "collator",
						"type": "address"
					}
				],
				"name": "executeScheduled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "getErasCovered",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "getMember",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "collator",
						"type": "address"
					}
				],
				"name": "getPayoutAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "getScheduledDecrease",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_auth_manager",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_oracle_master",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_deposit_staking",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_min_deposit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_max_deposit_total",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stake_unit_cover",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_min_payout",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "_eras_between_forced_undelegation",
						"type": "uint128"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "memberAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "memberNotPaid",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_max_covered",
						"type": "uint256"
					}
				],
				"name": "memberSetMaxCoveredDelegation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "members",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isMember",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxDefaulted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxCoveredDelegation",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "membersDepositTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable[]",
						"name": "delegators",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "collators",
						"type": "address[]"
					}
				],
				"name": "payOutCover",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "_eraId",
						"type": "uint64"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "totalStaked",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "totalSelected",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "orbitersCount",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "round",
								"type": "uint128"
							},
							{
								"internalType": "bytes32",
								"name": "blockHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint128",
								"name": "blockNumber",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "awarded",
								"type": "uint128"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "collatorAccount",
										"type": "address"
									},
									{
										"internalType": "uint128",
										"name": "points",
										"type": "uint128"
									},
									{
										"internalType": "bool",
										"name": "active",
										"type": "bool"
									},
									{
										"internalType": "uint256",
										"name": "bond",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "delegationsTotal",
										"type": "uint256"
									},
									{
										"components": [
											{
												"internalType": "address",
												"name": "ownerAccount",
												"type": "address"
											},
											{
												"internalType": "uint256",
												"name": "amount",
												"type": "uint256"
											}
										],
										"internalType": "struct Types.DelegationsData[]",
										"name": "topActiveDelegations",
										"type": "tuple[]"
									}
								],
								"internalType": "struct Types.CollatorData[]",
								"name": "collators",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Types.OracleData",
						"name": "_report",
						"type": "tuple"
					}
				],
				"name": "pushData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "scheduleDecreaseCover",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "scheduleDecreaseCoverManager",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "candidate",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "less",
						"type": "uint256"
					}
				],
				"name": "schedule_delegator_bond_less",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "scheduledDecreasesMap",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "era",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "_eras_between_forced_undelegation",
						"type": "uint128"
					}
				],
				"name": "setErasBetweenForcedUndelegations",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "_execute_delay",
						"type": "uint128"
					},
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "setExecuteDelay",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_max_deposit_total",
						"type": "uint256"
					}
				],
				"name": "setMaxDepositTotal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_min_deposit",
						"type": "uint256"
					}
				],
				"name": "setMinDeposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_min_payout",
						"type": "uint256"
					}
				],
				"name": "setMinPayout",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_stake_unit_cover",
						"type": "uint256"
					}
				],
				"name": "setStakeUnitCover",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "staking",
				"outputs": [
					{
						"internalType": "contract ParachainStaking",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newMember",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "whitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelisted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "withdrawRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"cancelDecreaseCover()": {
					"details": "Cancel a scheduled cover decrease (withdrawal)"
				},
				"depositCover(address)": {
					"details": "Deposit cover funds for a member collator. Anybody can deposit funds for a collator, but only the collator can withdraw. The collator must be whitelisted. If the collator is at default (out of funds and not recording missed rounds), this method will cause the collator to resume cover.",
					"params": {
						"collator": "The collator address the deposit is for."
					}
				},
				"executeScheduled(address)": {
					"details": "Execute a scheduled cover decrease (withdrawal) by a member",
					"params": {
						"collator": "The collator member whose scheduled withdrawal we are executing (anybody can execute it)"
					}
				},
				"payOutCover(address[],address[])": {
					"details": "Anybody can execute this method to pay out cover claims to any delegator",
					"params": {
						"collators": "The corresponding collators that the delegators are caliming from",
						"delegators": "The delegators to pay cover claims to. These are accumulated claims and could even be from multiple collators that missed rounds."
					}
				},
				"pushData(uint64,(uint256,uint128,uint128,uint128,bytes32,uint128,uint128,(address,uint128,bool,uint256,uint256,(address,uint256)[])[]))": {
					"details": "The method is used by the oracle to push data into the contract and calculate potential cover claims.",
					"params": {
						"_eraId": "The round number",
						"_report": "The collator data, including authored block counts, delegators, etc."
					}
				},
				"scheduleDecreaseCover(uint256)": {
					"details": "A member can request to withdraw its cover funds. The member has to wait for a number of rounds until they can withdraw. During this waiting time, their funds continue to cover their delegators.",
					"params": {
						"amount": "How much to decrease the cover by."
					}
				},
				"scheduleDecreaseCoverManager(uint256,address)": {
					"details": "Allows the manager to schedule a refund of the deposit back to a member that is no longer whitelisted",
					"params": {
						"amount": "How much to refund back.",
						"member": "The member to refund their deposit to."
					}
				},
				"setExecuteDelay(uint128,address)": {
					"details": "Manager can override execute delay (this is temporary and will be overwritten in next pushData)",
					"params": {
						"_execute_delay": "The decrease execution delay"
					}
				},
				"setMaxDepositTotal(uint256)": {
					"details": "Set the maximum total deposit. Member collators cannot deposit more than this total amount.",
					"params": {
						"_max_deposit_total": "The max deposit allowed"
					}
				},
				"setMinDeposit(uint256)": {
					"details": "Set the minimum member deposit allowed",
					"params": {
						"_min_deposit": "The min deposit"
					}
				},
				"withdrawRewards(uint256,address)": {
					"details": "Allows the manager to withdraw any contract balance that is above the total deposits balance. This includes staking rewards or other funds that were sent tot he contract.",
					"params": {
						"amount": "How much to withdraw",
						"receiver": "Who to send the withdrawal to"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"initialize(address,address,address,uint256,uint256,uint256,uint256,uint128)": {
					"notice": "Initialize contract."
				},
				"staking()": {
					"notice": "The ParachainStaking wrapper at the known pre-compile address. This will be used to make all calls to the underlying staking solution"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/InactivityCover.sol": "InactivityCover"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
			"keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
			"license": "MIT",
			"urls": [
				"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
				"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeCast.sol": {
			"keccak256": "0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1",
				"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj"
			]
		},
		"contracts/DepositStaking.sol": {
			"keccak256": "0x7a57cd2c905d85078c77dcd1b5a5ffeb99d644506f93345739ea919def5d1aa6",
			"license": "MIT",
			"urls": [
				"bzz-raw://7f98f6d83e59b47caf9c6382e318b280fe278daf4a33ac1fdc36fbb794f2aec4",
				"dweb:/ipfs/QmTqaYZKXqB5k3F7J8CAshmy3G192beXPkRksau1BeeKou"
			]
		},
		"contracts/InactivityCover.sol": {
			"keccak256": "0x8fd42c105fb5f82dc18c818a7c9fd4b6538a5eb428418a89f5b981b7a82faa2c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4ee28b79032cdc2b9eeb10e5e67a1a99609062704c68c5ea673946132dcf9c9",
				"dweb:/ipfs/QmQceyrLk1bBUVBTbtJ3DPQg6TdTZoZYKeW9cgPAAi2LaS"
			]
		},
		"interfaces/IAuthManager.sol": {
			"keccak256": "0x558a0715951a6f4b9c88dab184315d9e4eb50247fa50236cc74340d90b6c5d99",
			"license": "MIT",
			"urls": [
				"bzz-raw://31166dd660997625b6d1d1c26dcca5fa9b926b55b5a8894f8d4216df5dd9c3f0",
				"dweb:/ipfs/QmS3xq9VDuehokDhb8rpXpUSiayTA8VUgKZFhEB3gcg8G9"
			]
		},
		"interfaces/IOracleMaster.sol": {
			"keccak256": "0x563c6781a98ffb7319cbb56e4a24b2e1a6349cdcccad554fe8797cad7400f655",
			"license": "MIT",
			"urls": [
				"bzz-raw://e1db9572a60f36f3a3e174f27a6202bdc441605023311a5af6bb3ab1e2d3bbfd",
				"dweb:/ipfs/QmVMG5VYD6Gwzj2rmmLdMuZ832SwQaNJSbBLfgns1BGYUx"
			]
		},
		"interfaces/IPushable.sol": {
			"keccak256": "0xbffc7ea03739c11627ef02d44958a28ee1b6c9e82d5ab95867c9627b7051004f",
			"license": "MIT",
			"urls": [
				"bzz-raw://4fa3df799c68cb21cdbb08c08156a58ad15483264392a279f2affbe73d9548b7",
				"dweb:/ipfs/QmXjhH3EnYxXvBRuFQa5e7mLuaRPpLYGXtP9ZTP9jXsZaQ"
			]
		},
		"interfaces/StakingInterface.sol": {
			"keccak256": "0xe3dadc1045be8bf5c80b9ef0fd1611cd1116629b22ff25dd504a74b5b94e292d",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://879adefec5eb9dfb3dd7d130744343a711200f25572c953a513bcd696f83067c",
				"dweb:/ipfs/QmXMVgQ6SbM21KtzHYcGXcj5mvQcWCYVZuYoeUCEtrx1To"
			]
		},
		"interfaces/Types.sol": {
			"keccak256": "0x7cd8f51836f00ad07c3bac7cf78aab2706aa8141e2c2669e2d407ae9ec2fe7ba",
			"license": "MIT",
			"urls": [
				"bzz-raw://62ff92b32ac343f94fb7559f120e57be6c50fe08cbd70943e4a63b7bebb69d6b",
				"dweb:/ipfs/QmVDthSYi1iuvD6u6bLh46eBv1dVtXKaQUVahJNiWr8Njh"
			]
		}
	},
	"version": 1
}