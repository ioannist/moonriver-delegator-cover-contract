{
	"id": "bd969ca06ea60ece3315ad602bfa6c80",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"interfaces/StakingInterface.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity >=0.8.3;\r\n\r\n/// @dev The ParachainStaking contract's address.\r\naddress constant PARACHAIN_STAKING_ADDRESS = 0x0000000000000000000000000000000000000800;\r\n\r\n/// @dev The ParachainStaking contract's instance.\r\nParachainStaking constant PARACHAIN_STAKING_CONTRACT = ParachainStaking(\r\n    PARACHAIN_STAKING_ADDRESS\r\n);\r\n\r\n/// @author The Moonbeam Team\r\n/// @title Pallet Parachain Staking Interface\r\n/// @dev The interface through which solidity contracts will interact with Parachain Staking\r\n/// We follow this same interface including four-byte function selectors, in the precompile that\r\n/// wraps the pallet\r\n/// @custom:address 0x0000000000000000000000000000000000000800\r\ninterface ParachainStaking {\r\n    /// @dev Check whether the specified address is currently a staking delegator\r\n    /// @custom:selector fd8ab482\r\n    /// @param delegator the address that we want to confirm is a delegator\r\n    /// @return A boolean confirming whether the address is a delegator\r\n    function isDelegator(address delegator) external view returns (bool);\r\n\r\n    /// @dev Check whether the specified address is currently a collator candidate\r\n    /// @custom:selector d51b9e93\r\n    /// @param candidate the address that we want to confirm is a collator andidate\r\n    /// @return A boolean confirming whether the address is a collator candidate\r\n    function isCandidate(address candidate) external view returns (bool);\r\n\r\n    /// @dev Check whether the specifies address is currently a part of the active set\r\n    /// @custom:selector 740d7d2a\r\n    /// @param candidate the address that we want to confirm is a part of the active set\r\n    /// @return A boolean confirming whether the address is a part of the active set\r\n    function isSelectedCandidate(address candidate)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    /// @dev Total points awarded to all collators in a particular round\r\n    /// @custom:selector 9799b4e7\r\n    /// @param round the round for which we are querying the points total\r\n    /// @return The total points awarded to all collators in the round\r\n    function points(uint256 round) external view returns (uint256);\r\n\r\n    /// @dev The amount delegated in support of the candidate by the delegator\r\n    /// @custom:selector a73e51bc\r\n    /// @param delegator Who made this delegation\r\n    /// @param candidate The candidate for which the delegation is in support of\r\n    /// @return The amount of the delegation in support of the candidate by the delegator\r\n    function delegationAmount(address delegator, address candidate)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /// @dev Whether the delegation is in the top delegations\r\n    /// @custom:selector 91cc8657\r\n    /// @param delegator Who made this delegation\r\n    /// @param candidate The candidate for which the delegation is in support of\r\n    /// @return If delegation is in top delegations (is counted)\r\n    function isInTopDelegations(address delegator, address candidate)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    /// @dev Get the minimum delegation amount\r\n    /// @custom:selector 02985992\r\n    /// @return The minimum delegation amount\r\n    function minDelegation() external view returns (uint256);\r\n\r\n    /// @dev Get the CandidateCount weight hint\r\n    /// @custom:selector a9a981a3\r\n    /// @return The CandidateCount weight hint\r\n    function candidateCount() external view returns (uint256);\r\n\r\n    /// @dev Get the current round number\r\n    /// @custom:selector 146ca531\r\n    /// @return The current round number\r\n    function round() external view returns (uint256);\r\n\r\n    /// @dev Get the CandidateDelegationCount weight hint\r\n    /// @custom:selector 2ec087eb\r\n    /// @param candidate The address for which we are querying the nomination count\r\n    /// @return The number of nominations backing the collator\r\n    function candidateDelegationCount(address candidate)\r\n        external\r\n        view\r\n        returns (uint32);\r\n\r\n    /// @dev Get the CandidateAutoCompoundingDelegationCount weight hint\r\n    /// @custom:selector 905f0806\r\n    /// @param candidate The address for which we are querying the auto compounding\r\n    ///     delegation count\r\n    /// @return The number of auto compounding delegations\r\n    function candidateAutoCompoundingDelegationCount(address candidate)\r\n        external\r\n        view\r\n        returns (uint32);\r\n\r\n    /// @dev Get the DelegatorDelegationCount weight hint\r\n    /// @custom:selector 067ec822\r\n    /// @param delegator The address for which we are querying the delegation count\r\n    /// @return The number of delegations made by the delegator\r\n    function delegatorDelegationCount(address delegator)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /// @dev Get the selected candidates for the current round\r\n    /// @custom:selector bcf868a6\r\n    /// @return The selected candidate accounts\r\n    function selectedCandidates() external view returns (address[] memory);\r\n\r\n    /// @dev Whether there exists a pending request for a delegation made by a delegator\r\n    /// @custom:selector 3b16def8\r\n    /// @param delegator the delegator that made the delegation\r\n    /// @param candidate the candidate for which the delegation was made\r\n    /// @return Whether a pending request exists for such delegation\r\n    function delegationRequestIsPending(address delegator, address candidate)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    /// @dev Whether there exists a pending exit for candidate\r\n    /// @custom:selector 43443682\r\n    /// @param candidate the candidate for which the exit request was made\r\n    /// @return Whether a pending request exists for such delegation\r\n    function candidateExitIsPending(address candidate)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    /// @dev Whether there exists a pending bond less request made by a candidate\r\n    /// @custom:selector d0deec11\r\n    /// @param candidate the candidate which made the request\r\n    /// @return Whether a pending bond less request was made by the candidate\r\n    function candidateRequestIsPending(address candidate)\r\n        external\r\n        view\r\n        returns (bool);\r\n\r\n    /// @dev Returns the percent value of auto-compound set for a delegation\r\n    /// @custom:selector b4d4c7fd\r\n    /// @param delegator the delegator that made the delegation\r\n    /// @param candidate the candidate for which the delegation was made\r\n    /// @return Percent of rewarded amount that is auto-compounded on each payout\r\n    function delegationAutoCompound(address delegator, address candidate)\r\n        external\r\n        view\r\n        returns (uint8);\r\n\r\n    /// @dev Join the set of collator candidates\r\n    /// @custom:selector 1f2f83ad\r\n    /// @param amount The amount self-bonded by the caller to become a collator candidate\r\n    /// @param candidateCount The number of candidates in the CandidatePool\r\n    function joinCandidates(uint256 amount, uint256 candidateCount) external;\r\n\r\n    /// @dev Request to leave the set of collator candidates\r\n    /// @custom:selector b1a3c1b7\r\n    /// @param candidateCount The number of candidates in the CandidatePool\r\n    function scheduleLeaveCandidates(uint256 candidateCount) external;\r\n\r\n    /// @dev Execute due request to leave the set of collator candidates\r\n    /// @custom:selector 3867f308\r\n    /// @param candidate The candidate address for which the pending exit request will be executed\r\n    /// @param candidateDelegationCount The number of delegations for the candidate to be revoked\r\n    function executeLeaveCandidates(\r\n        address candidate,\r\n        uint256 candidateDelegationCount\r\n    ) external;\r\n\r\n    /// @dev Cancel request to leave the set of collator candidates\r\n    /// @custom:selector 9c76ebb4\r\n    /// @param candidateCount The number of candidates in the CandidatePool\r\n    function cancelLeaveCandidates(uint256 candidateCount) external;\r\n\r\n    /// @dev Temporarily leave the set of collator candidates without unbonding\r\n    /// @custom:selector a6485ccd\r\n    function goOffline() external;\r\n\r\n    /// @dev Rejoin the set of collator candidates if previously had called `goOffline`\r\n    /// @custom:selector 6e5b676b\r\n    function goOnline() external;\r\n\r\n    /// @dev Request to bond more for collator candidates\r\n    /// @custom:selector a52c8643\r\n    /// @param more The additional amount self-bonded\r\n    function candidateBondMore(uint256 more) external;\r\n\r\n    /// @dev Request to bond less for collator candidates\r\n    /// @custom:selector 60744ae0\r\n    /// @param less The amount to be subtracted from self-bond and unreserved\r\n    function scheduleCandidateBondLess(uint256 less) external;\r\n\r\n    /// @dev Execute pending candidate bond request\r\n    /// @custom:selector 2e290290\r\n    /// @param candidate The address for the candidate for which the request will be executed\r\n    function executeCandidateBondLess(address candidate) external;\r\n\r\n    /// @dev Cancel pending candidate bond request\r\n    /// @custom:selector b5ad5f07\r\n    function cancelCandidateBondLess() external;\r\n\r\n    /// @dev Make a delegation in support of a collator candidate\r\n    /// @custom:selector 829f5ee3\r\n    /// @param candidate The address of the supported collator candidate\r\n    /// @param amount The amount bonded in support of the collator candidate\r\n    /// @param candidateDelegationCount The number of delegations in support of the candidate\r\n    /// @param delegatorDelegationCount The number of existing delegations by the caller\r\n    function delegate(\r\n        address candidate,\r\n        uint256 amount,\r\n        uint256 candidateDelegationCount,\r\n        uint256 delegatorDelegationCount\r\n    ) external;\r\n\r\n    /// @dev Make a delegation in support of a collator candidate\r\n    /// @custom:selector 4b8bc9bf\r\n    /// @param candidate The address of the supported collator candidate\r\n    /// @param amount The amount bonded in support of the collator candidate\r\n    /// @param autoCompound The percent of reward that should be auto-compounded\r\n    /// @param candidateDelegationCount The number of delegations in support of the candidate\r\n    /// @param candidateAutoCompoundingDelegationCount The number of auto-compounding delegations\r\n    /// in support of the candidate\r\n    /// @param delegatorDelegationCount The number of existing delegations by the caller\r\n    function delegateWithAutoCompound(\r\n        address candidate,\r\n        uint256 amount,\r\n        uint8 autoCompound,\r\n        uint256 candidateDelegationCount,\r\n        uint256 candidateAutoCompoundingDelegationCount,\r\n        uint256 delegatorDelegationCount\r\n    ) external;\r\n\r\n    /// @notice DEPRECATED use batch util with scheduleRevokeDelegation for all delegations\r\n    /// @dev Request to leave the set of delegators\r\n    /// @custom:selector f939dadb\r\n    function scheduleLeaveDelegators() external;\r\n\r\n    /// @notice DEPRECATED use batch util with executeDelegationRequest for all delegations\r\n    /// @dev Execute request to leave the set of delegators and revoke all delegations\r\n    /// @custom:selector fb1e2bf9\r\n    /// @param delegator The leaving delegator\r\n    /// @param delegatorDelegationCount The number of active delegations to be revoked by delegator\r\n    function executeLeaveDelegators(\r\n        address delegator,\r\n        uint256 delegatorDelegationCount\r\n    ) external;\r\n\r\n    /// @notice DEPRECATED use batch util with cancelDelegationRequest for all delegations\r\n    /// @dev Cancel request to leave the set of delegators\r\n    /// @custom:selector f7421284\r\n    function cancelLeaveDelegators() external;\r\n\r\n    /// @dev Request to revoke an existing delegation\r\n    /// @custom:selector 1a1c740c\r\n    /// @param candidate The address of the collator candidate which will no longer be supported\r\n    function scheduleRevokeDelegation(address candidate) external;\r\n\r\n    /// @dev Bond more for delegators with respect to a specific collator candidate\r\n    /// @custom:selector 0465135b\r\n    /// @param candidate The address of the collator candidate for which delegation shall increase\r\n    /// @param more The amount by which the delegation is increased\r\n    function delegatorBondMore(address candidate, uint256 more) external;\r\n\r\n    /// @dev Request to bond less for delegators with respect to a specific collator candidate\r\n    /// @custom:selector c172fd2b\r\n    /// @param candidate The address of the collator candidate for which delegation shall decrease\r\n    /// @param less The amount by which the delegation is decreased (upon execution)\r\n    function scheduleDelegatorBondLess(address candidate, uint256 less)\r\n        external;\r\n\r\n    /// @dev Execute pending delegation request (if exists && is due)\r\n    /// @custom:selector e98c8abe\r\n    /// @param delegator The address of the delegator\r\n    /// @param candidate The address of the candidate\r\n    function executeDelegationRequest(address delegator, address candidate)\r\n        external;\r\n\r\n    /// @dev Cancel pending delegation request (already made in support of input by caller)\r\n    /// @custom:selector c90eee83\r\n    /// @param candidate The address of the candidate\r\n    function cancelDelegationRequest(address candidate) external;\r\n\r\n    /// @dev Sets an auto-compound value for a delegation\r\n    /// @custom:selector faa1786f\r\n    /// @param candidate The address of the supported collator candidate\r\n    /// @param value The percent of reward that should be auto-compounded\r\n    /// @param candidateAutoCompoundingDelegationCount The number of auto-compounding delegations\r\n    /// in support of the candidate\r\n    /// @param delegatorDelegationCount The number of existing delegations by the caller\r\n    function setAutoCompound(\r\n        address candidate,\r\n        uint8 value,\r\n        uint256 candidateAutoCompoundingDelegationCount,\r\n        uint256 delegatorDelegationCount\r\n    ) external;\r\n\r\n    /// @dev Fetch the total staked amount of a delegator, regardless of the\r\n    /// candidate.\r\n    /// @custom:selector e6861713\r\n    /// @param delegator Address of the delegator.\r\n    /// @return Total amount of stake.\r\n    function getDelegatorTotalStaked(address delegator)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /// @dev Fetch the total staked towards a candidate.\r\n    /// @custom:selector bc5a1043\r\n    /// @param candidate Address of the candidate.\r\n    /// @return Total amount of stake.\r\n    function getCandidateTotalCounted(address candidate)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"interfaces/StakingInterface.sol": {
				"ParachainStaking": {
					"abi": [
						{
							"inputs": [],
							"name": "cancelCandidateBondLess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "cancelDelegationRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "candidateCount",
									"type": "uint256"
								}
							],
							"name": "cancelLeaveCandidates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelLeaveDelegators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "candidateAutoCompoundingDelegationCount",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "more",
									"type": "uint256"
								}
							],
							"name": "candidateBondMore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "candidateCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "candidateDelegationCount",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "candidateExitIsPending",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "candidateRequestIsPending",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "candidateDelegationCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "delegatorDelegationCount",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "autoCompound",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "candidateDelegationCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "candidateAutoCompoundingDelegationCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "delegatorDelegationCount",
									"type": "uint256"
								}
							],
							"name": "delegateWithAutoCompound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "delegationAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "delegationAutoCompound",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "delegationRequestIsPending",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "more",
									"type": "uint256"
								}
							],
							"name": "delegatorBondMore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegatorDelegationCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "executeCandidateBondLess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "executeDelegationRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "candidateDelegationCount",
									"type": "uint256"
								}
							],
							"name": "executeLeaveCandidates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "delegatorDelegationCount",
									"type": "uint256"
								}
							],
							"name": "executeLeaveDelegators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "getCandidateTotalCounted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "getDelegatorTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "goOffline",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "goOnline",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "isCandidate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "isDelegator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "isInTopDelegations",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "isSelectedCandidate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "candidateCount",
									"type": "uint256"
								}
							],
							"name": "joinCandidates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minDelegation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "round",
									"type": "uint256"
								}
							],
							"name": "points",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "round",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "less",
									"type": "uint256"
								}
							],
							"name": "scheduleCandidateBondLess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "less",
									"type": "uint256"
								}
							],
							"name": "scheduleDelegatorBondLess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "candidateCount",
									"type": "uint256"
								}
							],
							"name": "scheduleLeaveCandidates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scheduleLeaveDelegators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "scheduleRevokeDelegation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "selectedCandidates",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "value",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "candidateAutoCompoundingDelegationCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "delegatorDelegationCount",
									"type": "uint256"
								}
							],
							"name": "setAutoCompound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Moonbeam Team",
						"custom:address": "0x0000000000000000000000000000000000000800",
						"details": "The interface through which solidity contracts will interact with Parachain Staking We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet",
						"kind": "dev",
						"methods": {
							"cancelCandidateBondLess()": {
								"custom:selector": "b5ad5f07",
								"details": "Cancel pending candidate bond request"
							},
							"cancelDelegationRequest(address)": {
								"custom:selector": "c90eee83",
								"details": "Cancel pending delegation request (already made in support of input by caller)",
								"params": {
									"candidate": "The address of the candidate"
								}
							},
							"cancelLeaveCandidates(uint256)": {
								"custom:selector": "9c76ebb4",
								"details": "Cancel request to leave the set of collator candidates",
								"params": {
									"candidateCount": "The number of candidates in the CandidatePool"
								}
							},
							"cancelLeaveDelegators()": {
								"custom:selector": "f7421284",
								"details": "Cancel request to leave the set of delegators"
							},
							"candidateAutoCompoundingDelegationCount(address)": {
								"custom:selector": "905f0806",
								"details": "Get the CandidateAutoCompoundingDelegationCount weight hint",
								"params": {
									"candidate": "The address for which we are querying the auto compounding     delegation count"
								},
								"returns": {
									"_0": "The number of auto compounding delegations"
								}
							},
							"candidateBondMore(uint256)": {
								"custom:selector": "a52c8643",
								"details": "Request to bond more for collator candidates",
								"params": {
									"more": "The additional amount self-bonded"
								}
							},
							"candidateCount()": {
								"custom:selector": "a9a981a3",
								"details": "Get the CandidateCount weight hint",
								"returns": {
									"_0": "The CandidateCount weight hint"
								}
							},
							"candidateDelegationCount(address)": {
								"custom:selector": "2ec087eb",
								"details": "Get the CandidateDelegationCount weight hint",
								"params": {
									"candidate": "The address for which we are querying the nomination count"
								},
								"returns": {
									"_0": "The number of nominations backing the collator"
								}
							},
							"candidateExitIsPending(address)": {
								"custom:selector": "43443682",
								"details": "Whether there exists a pending exit for candidate",
								"params": {
									"candidate": "the candidate for which the exit request was made"
								},
								"returns": {
									"_0": "Whether a pending request exists for such delegation"
								}
							},
							"candidateRequestIsPending(address)": {
								"custom:selector": "d0deec11",
								"details": "Whether there exists a pending bond less request made by a candidate",
								"params": {
									"candidate": "the candidate which made the request"
								},
								"returns": {
									"_0": "Whether a pending bond less request was made by the candidate"
								}
							},
							"delegate(address,uint256,uint256,uint256)": {
								"custom:selector": "829f5ee3",
								"details": "Make a delegation in support of a collator candidate",
								"params": {
									"amount": "The amount bonded in support of the collator candidate",
									"candidate": "The address of the supported collator candidate",
									"candidateDelegationCount": "The number of delegations in support of the candidate",
									"delegatorDelegationCount": "The number of existing delegations by the caller"
								}
							},
							"delegateWithAutoCompound(address,uint256,uint8,uint256,uint256,uint256)": {
								"custom:selector": "4b8bc9bf",
								"details": "Make a delegation in support of a collator candidate",
								"params": {
									"amount": "The amount bonded in support of the collator candidate",
									"autoCompound": "The percent of reward that should be auto-compounded",
									"candidate": "The address of the supported collator candidate",
									"candidateAutoCompoundingDelegationCount": "The number of auto-compounding delegations in support of the candidate",
									"candidateDelegationCount": "The number of delegations in support of the candidate",
									"delegatorDelegationCount": "The number of existing delegations by the caller"
								}
							},
							"delegationAmount(address,address)": {
								"custom:selector": "a73e51bc",
								"details": "The amount delegated in support of the candidate by the delegator",
								"params": {
									"candidate": "The candidate for which the delegation is in support of",
									"delegator": "Who made this delegation"
								},
								"returns": {
									"_0": "The amount of the delegation in support of the candidate by the delegator"
								}
							},
							"delegationAutoCompound(address,address)": {
								"custom:selector": "b4d4c7fd",
								"details": "Returns the percent value of auto-compound set for a delegation",
								"params": {
									"candidate": "the candidate for which the delegation was made",
									"delegator": "the delegator that made the delegation"
								},
								"returns": {
									"_0": "Percent of rewarded amount that is auto-compounded on each payout"
								}
							},
							"delegationRequestIsPending(address,address)": {
								"custom:selector": "3b16def8",
								"details": "Whether there exists a pending request for a delegation made by a delegator",
								"params": {
									"candidate": "the candidate for which the delegation was made",
									"delegator": "the delegator that made the delegation"
								},
								"returns": {
									"_0": "Whether a pending request exists for such delegation"
								}
							},
							"delegatorBondMore(address,uint256)": {
								"custom:selector": "0465135b",
								"details": "Bond more for delegators with respect to a specific collator candidate",
								"params": {
									"candidate": "The address of the collator candidate for which delegation shall increase",
									"more": "The amount by which the delegation is increased"
								}
							},
							"delegatorDelegationCount(address)": {
								"custom:selector": "067ec822",
								"details": "Get the DelegatorDelegationCount weight hint",
								"params": {
									"delegator": "The address for which we are querying the delegation count"
								},
								"returns": {
									"_0": "The number of delegations made by the delegator"
								}
							},
							"executeCandidateBondLess(address)": {
								"custom:selector": "2e290290",
								"details": "Execute pending candidate bond request",
								"params": {
									"candidate": "The address for the candidate for which the request will be executed"
								}
							},
							"executeDelegationRequest(address,address)": {
								"custom:selector": "e98c8abe",
								"details": "Execute pending delegation request (if exists && is due)",
								"params": {
									"candidate": "The address of the candidate",
									"delegator": "The address of the delegator"
								}
							},
							"executeLeaveCandidates(address,uint256)": {
								"custom:selector": "3867f308",
								"details": "Execute due request to leave the set of collator candidates",
								"params": {
									"candidate": "The candidate address for which the pending exit request will be executed",
									"candidateDelegationCount": "The number of delegations for the candidate to be revoked"
								}
							},
							"executeLeaveDelegators(address,uint256)": {
								"custom:selector": "fb1e2bf9",
								"details": "Execute request to leave the set of delegators and revoke all delegations",
								"params": {
									"delegator": "The leaving delegator",
									"delegatorDelegationCount": "The number of active delegations to be revoked by delegator"
								}
							},
							"getCandidateTotalCounted(address)": {
								"custom:selector": "bc5a1043",
								"details": "Fetch the total staked towards a candidate.",
								"params": {
									"candidate": "Address of the candidate."
								},
								"returns": {
									"_0": "Total amount of stake."
								}
							},
							"getDelegatorTotalStaked(address)": {
								"custom:selector": "e6861713",
								"details": "Fetch the total staked amount of a delegator, regardless of the candidate.",
								"params": {
									"delegator": "Address of the delegator."
								},
								"returns": {
									"_0": "Total amount of stake."
								}
							},
							"goOffline()": {
								"custom:selector": "a6485ccd",
								"details": "Temporarily leave the set of collator candidates without unbonding"
							},
							"goOnline()": {
								"custom:selector": "6e5b676b",
								"details": "Rejoin the set of collator candidates if previously had called `goOffline`"
							},
							"isCandidate(address)": {
								"custom:selector": "d51b9e93",
								"details": "Check whether the specified address is currently a collator candidate",
								"params": {
									"candidate": "the address that we want to confirm is a collator andidate"
								},
								"returns": {
									"_0": "A boolean confirming whether the address is a collator candidate"
								}
							},
							"isDelegator(address)": {
								"custom:selector": "fd8ab482",
								"details": "Check whether the specified address is currently a staking delegator",
								"params": {
									"delegator": "the address that we want to confirm is a delegator"
								},
								"returns": {
									"_0": "A boolean confirming whether the address is a delegator"
								}
							},
							"isInTopDelegations(address,address)": {
								"custom:selector": "91cc8657",
								"details": "Whether the delegation is in the top delegations",
								"params": {
									"candidate": "The candidate for which the delegation is in support of",
									"delegator": "Who made this delegation"
								},
								"returns": {
									"_0": "If delegation is in top delegations (is counted)"
								}
							},
							"isSelectedCandidate(address)": {
								"custom:selector": "740d7d2a",
								"details": "Check whether the specifies address is currently a part of the active set",
								"params": {
									"candidate": "the address that we want to confirm is a part of the active set"
								},
								"returns": {
									"_0": "A boolean confirming whether the address is a part of the active set"
								}
							},
							"joinCandidates(uint256,uint256)": {
								"custom:selector": "1f2f83ad",
								"details": "Join the set of collator candidates",
								"params": {
									"amount": "The amount self-bonded by the caller to become a collator candidate",
									"candidateCount": "The number of candidates in the CandidatePool"
								}
							},
							"minDelegation()": {
								"custom:selector": "02985992",
								"details": "Get the minimum delegation amount",
								"returns": {
									"_0": "The minimum delegation amount"
								}
							},
							"points(uint256)": {
								"custom:selector": "9799b4e7",
								"details": "Total points awarded to all collators in a particular round",
								"params": {
									"round": "the round for which we are querying the points total"
								},
								"returns": {
									"_0": "The total points awarded to all collators in the round"
								}
							},
							"round()": {
								"custom:selector": "146ca531",
								"details": "Get the current round number",
								"returns": {
									"_0": "The current round number"
								}
							},
							"scheduleCandidateBondLess(uint256)": {
								"custom:selector": "60744ae0",
								"details": "Request to bond less for collator candidates",
								"params": {
									"less": "The amount to be subtracted from self-bond and unreserved"
								}
							},
							"scheduleDelegatorBondLess(address,uint256)": {
								"custom:selector": "c172fd2b",
								"details": "Request to bond less for delegators with respect to a specific collator candidate",
								"params": {
									"candidate": "The address of the collator candidate for which delegation shall decrease",
									"less": "The amount by which the delegation is decreased (upon execution)"
								}
							},
							"scheduleLeaveCandidates(uint256)": {
								"custom:selector": "b1a3c1b7",
								"details": "Request to leave the set of collator candidates",
								"params": {
									"candidateCount": "The number of candidates in the CandidatePool"
								}
							},
							"scheduleLeaveDelegators()": {
								"custom:selector": "f939dadb",
								"details": "Request to leave the set of delegators"
							},
							"scheduleRevokeDelegation(address)": {
								"custom:selector": "1a1c740c",
								"details": "Request to revoke an existing delegation",
								"params": {
									"candidate": "The address of the collator candidate which will no longer be supported"
								}
							},
							"selectedCandidates()": {
								"custom:selector": "bcf868a6",
								"details": "Get the selected candidates for the current round",
								"returns": {
									"_0": "The selected candidate accounts"
								}
							},
							"setAutoCompound(address,uint8,uint256,uint256)": {
								"custom:selector": "faa1786f",
								"details": "Sets an auto-compound value for a delegation",
								"params": {
									"candidate": "The address of the supported collator candidate",
									"candidateAutoCompoundingDelegationCount": "The number of auto-compounding delegations in support of the candidate",
									"delegatorDelegationCount": "The number of existing delegations by the caller",
									"value": "The percent of reward that should be auto-compounded"
								}
							}
						},
						"title": "Pallet Parachain Staking Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancelCandidateBondLess()": "b5ad5f07",
							"cancelDelegationRequest(address)": "c90eee83",
							"cancelLeaveCandidates(uint256)": "9c76ebb4",
							"cancelLeaveDelegators()": "f7421284",
							"candidateAutoCompoundingDelegationCount(address)": "905f0806",
							"candidateBondMore(uint256)": "a52c8643",
							"candidateCount()": "a9a981a3",
							"candidateDelegationCount(address)": "2ec087eb",
							"candidateExitIsPending(address)": "43443682",
							"candidateRequestIsPending(address)": "d0deec11",
							"delegate(address,uint256,uint256,uint256)": "829f5ee3",
							"delegateWithAutoCompound(address,uint256,uint8,uint256,uint256,uint256)": "4b8bc9bf",
							"delegationAmount(address,address)": "a73e51bc",
							"delegationAutoCompound(address,address)": "b4d4c7fd",
							"delegationRequestIsPending(address,address)": "3b16def8",
							"delegatorBondMore(address,uint256)": "0465135b",
							"delegatorDelegationCount(address)": "067ec822",
							"executeCandidateBondLess(address)": "2e290290",
							"executeDelegationRequest(address,address)": "e98c8abe",
							"executeLeaveCandidates(address,uint256)": "3867f308",
							"executeLeaveDelegators(address,uint256)": "fb1e2bf9",
							"getCandidateTotalCounted(address)": "bc5a1043",
							"getDelegatorTotalStaked(address)": "e6861713",
							"goOffline()": "a6485ccd",
							"goOnline()": "6e5b676b",
							"isCandidate(address)": "d51b9e93",
							"isDelegator(address)": "fd8ab482",
							"isInTopDelegations(address,address)": "91cc8657",
							"isSelectedCandidate(address)": "740d7d2a",
							"joinCandidates(uint256,uint256)": "1f2f83ad",
							"minDelegation()": "02985992",
							"points(uint256)": "9799b4e7",
							"round()": "146ca531",
							"scheduleCandidateBondLess(uint256)": "60744ae0",
							"scheduleDelegatorBondLess(address,uint256)": "c172fd2b",
							"scheduleLeaveCandidates(uint256)": "b1a3c1b7",
							"scheduleLeaveDelegators()": "f939dadb",
							"scheduleRevokeDelegation(address)": "1a1c740c",
							"selectedCandidates()": "bcf868a6",
							"setAutoCompound(address,uint8,uint256,uint256)": "faa1786f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"cancelCandidateBondLess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"cancelDelegationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateCount\",\"type\":\"uint256\"}],\"name\":\"cancelLeaveCandidates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelLeaveDelegators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"candidateAutoCompoundingDelegationCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"more\",\"type\":\"uint256\"}],\"name\":\"candidateBondMore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"candidateDelegationCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"candidateExitIsPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"candidateRequestIsPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateDelegationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorDelegationCount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"autoCompound\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"candidateDelegationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateAutoCompoundingDelegationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorDelegationCount\",\"type\":\"uint256\"}],\"name\":\"delegateWithAutoCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"delegationAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"delegationAutoCompound\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"delegationRequestIsPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"more\",\"type\":\"uint256\"}],\"name\":\"delegatorBondMore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegatorDelegationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"executeCandidateBondLess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"executeDelegationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"candidateDelegationCount\",\"type\":\"uint256\"}],\"name\":\"executeLeaveCandidates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delegatorDelegationCount\",\"type\":\"uint256\"}],\"name\":\"executeLeaveDelegators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"getCandidateTotalCounted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"getDelegatorTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goOffline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goOnline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"isCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"isDelegator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"isInTopDelegations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"isSelectedCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateCount\",\"type\":\"uint256\"}],\"name\":\"joinCandidates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDelegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"points\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"less\",\"type\":\"uint256\"}],\"name\":\"scheduleCandidateBondLess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"less\",\"type\":\"uint256\"}],\"name\":\"scheduleDelegatorBondLess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateCount\",\"type\":\"uint256\"}],\"name\":\"scheduleLeaveCandidates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scheduleLeaveDelegators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"scheduleRevokeDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selectedCandidates\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"value\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"candidateAutoCompoundingDelegationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorDelegationCount\",\"type\":\"uint256\"}],\"name\":\"setAutoCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000800\",\"details\":\"The interface through which solidity contracts will interact with Parachain Staking We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet\",\"kind\":\"dev\",\"methods\":{\"cancelCandidateBondLess()\":{\"custom:selector\":\"b5ad5f07\",\"details\":\"Cancel pending candidate bond request\"},\"cancelDelegationRequest(address)\":{\"custom:selector\":\"c90eee83\",\"details\":\"Cancel pending delegation request (already made in support of input by caller)\",\"params\":{\"candidate\":\"The address of the candidate\"}},\"cancelLeaveCandidates(uint256)\":{\"custom:selector\":\"9c76ebb4\",\"details\":\"Cancel request to leave the set of collator candidates\",\"params\":{\"candidateCount\":\"The number of candidates in the CandidatePool\"}},\"cancelLeaveDelegators()\":{\"custom:selector\":\"f7421284\",\"details\":\"Cancel request to leave the set of delegators\"},\"candidateAutoCompoundingDelegationCount(address)\":{\"custom:selector\":\"905f0806\",\"details\":\"Get the CandidateAutoCompoundingDelegationCount weight hint\",\"params\":{\"candidate\":\"The address for which we are querying the auto compounding     delegation count\"},\"returns\":{\"_0\":\"The number of auto compounding delegations\"}},\"candidateBondMore(uint256)\":{\"custom:selector\":\"a52c8643\",\"details\":\"Request to bond more for collator candidates\",\"params\":{\"more\":\"The additional amount self-bonded\"}},\"candidateCount()\":{\"custom:selector\":\"a9a981a3\",\"details\":\"Get the CandidateCount weight hint\",\"returns\":{\"_0\":\"The CandidateCount weight hint\"}},\"candidateDelegationCount(address)\":{\"custom:selector\":\"2ec087eb\",\"details\":\"Get the CandidateDelegationCount weight hint\",\"params\":{\"candidate\":\"The address for which we are querying the nomination count\"},\"returns\":{\"_0\":\"The number of nominations backing the collator\"}},\"candidateExitIsPending(address)\":{\"custom:selector\":\"43443682\",\"details\":\"Whether there exists a pending exit for candidate\",\"params\":{\"candidate\":\"the candidate for which the exit request was made\"},\"returns\":{\"_0\":\"Whether a pending request exists for such delegation\"}},\"candidateRequestIsPending(address)\":{\"custom:selector\":\"d0deec11\",\"details\":\"Whether there exists a pending bond less request made by a candidate\",\"params\":{\"candidate\":\"the candidate which made the request\"},\"returns\":{\"_0\":\"Whether a pending bond less request was made by the candidate\"}},\"delegate(address,uint256,uint256,uint256)\":{\"custom:selector\":\"829f5ee3\",\"details\":\"Make a delegation in support of a collator candidate\",\"params\":{\"amount\":\"The amount bonded in support of the collator candidate\",\"candidate\":\"The address of the supported collator candidate\",\"candidateDelegationCount\":\"The number of delegations in support of the candidate\",\"delegatorDelegationCount\":\"The number of existing delegations by the caller\"}},\"delegateWithAutoCompound(address,uint256,uint8,uint256,uint256,uint256)\":{\"custom:selector\":\"4b8bc9bf\",\"details\":\"Make a delegation in support of a collator candidate\",\"params\":{\"amount\":\"The amount bonded in support of the collator candidate\",\"autoCompound\":\"The percent of reward that should be auto-compounded\",\"candidate\":\"The address of the supported collator candidate\",\"candidateAutoCompoundingDelegationCount\":\"The number of auto-compounding delegations in support of the candidate\",\"candidateDelegationCount\":\"The number of delegations in support of the candidate\",\"delegatorDelegationCount\":\"The number of existing delegations by the caller\"}},\"delegationAmount(address,address)\":{\"custom:selector\":\"a73e51bc\",\"details\":\"The amount delegated in support of the candidate by the delegator\",\"params\":{\"candidate\":\"The candidate for which the delegation is in support of\",\"delegator\":\"Who made this delegation\"},\"returns\":{\"_0\":\"The amount of the delegation in support of the candidate by the delegator\"}},\"delegationAutoCompound(address,address)\":{\"custom:selector\":\"b4d4c7fd\",\"details\":\"Returns the percent value of auto-compound set for a delegation\",\"params\":{\"candidate\":\"the candidate for which the delegation was made\",\"delegator\":\"the delegator that made the delegation\"},\"returns\":{\"_0\":\"Percent of rewarded amount that is auto-compounded on each payout\"}},\"delegationRequestIsPending(address,address)\":{\"custom:selector\":\"3b16def8\",\"details\":\"Whether there exists a pending request for a delegation made by a delegator\",\"params\":{\"candidate\":\"the candidate for which the delegation was made\",\"delegator\":\"the delegator that made the delegation\"},\"returns\":{\"_0\":\"Whether a pending request exists for such delegation\"}},\"delegatorBondMore(address,uint256)\":{\"custom:selector\":\"0465135b\",\"details\":\"Bond more for delegators with respect to a specific collator candidate\",\"params\":{\"candidate\":\"The address of the collator candidate for which delegation shall increase\",\"more\":\"The amount by which the delegation is increased\"}},\"delegatorDelegationCount(address)\":{\"custom:selector\":\"067ec822\",\"details\":\"Get the DelegatorDelegationCount weight hint\",\"params\":{\"delegator\":\"The address for which we are querying the delegation count\"},\"returns\":{\"_0\":\"The number of delegations made by the delegator\"}},\"executeCandidateBondLess(address)\":{\"custom:selector\":\"2e290290\",\"details\":\"Execute pending candidate bond request\",\"params\":{\"candidate\":\"The address for the candidate for which the request will be executed\"}},\"executeDelegationRequest(address,address)\":{\"custom:selector\":\"e98c8abe\",\"details\":\"Execute pending delegation request (if exists && is due)\",\"params\":{\"candidate\":\"The address of the candidate\",\"delegator\":\"The address of the delegator\"}},\"executeLeaveCandidates(address,uint256)\":{\"custom:selector\":\"3867f308\",\"details\":\"Execute due request to leave the set of collator candidates\",\"params\":{\"candidate\":\"The candidate address for which the pending exit request will be executed\",\"candidateDelegationCount\":\"The number of delegations for the candidate to be revoked\"}},\"executeLeaveDelegators(address,uint256)\":{\"custom:selector\":\"fb1e2bf9\",\"details\":\"Execute request to leave the set of delegators and revoke all delegations\",\"params\":{\"delegator\":\"The leaving delegator\",\"delegatorDelegationCount\":\"The number of active delegations to be revoked by delegator\"}},\"getCandidateTotalCounted(address)\":{\"custom:selector\":\"bc5a1043\",\"details\":\"Fetch the total staked towards a candidate.\",\"params\":{\"candidate\":\"Address of the candidate.\"},\"returns\":{\"_0\":\"Total amount of stake.\"}},\"getDelegatorTotalStaked(address)\":{\"custom:selector\":\"e6861713\",\"details\":\"Fetch the total staked amount of a delegator, regardless of the candidate.\",\"params\":{\"delegator\":\"Address of the delegator.\"},\"returns\":{\"_0\":\"Total amount of stake.\"}},\"goOffline()\":{\"custom:selector\":\"a6485ccd\",\"details\":\"Temporarily leave the set of collator candidates without unbonding\"},\"goOnline()\":{\"custom:selector\":\"6e5b676b\",\"details\":\"Rejoin the set of collator candidates if previously had called `goOffline`\"},\"isCandidate(address)\":{\"custom:selector\":\"d51b9e93\",\"details\":\"Check whether the specified address is currently a collator candidate\",\"params\":{\"candidate\":\"the address that we want to confirm is a collator andidate\"},\"returns\":{\"_0\":\"A boolean confirming whether the address is a collator candidate\"}},\"isDelegator(address)\":{\"custom:selector\":\"fd8ab482\",\"details\":\"Check whether the specified address is currently a staking delegator\",\"params\":{\"delegator\":\"the address that we want to confirm is a delegator\"},\"returns\":{\"_0\":\"A boolean confirming whether the address is a delegator\"}},\"isInTopDelegations(address,address)\":{\"custom:selector\":\"91cc8657\",\"details\":\"Whether the delegation is in the top delegations\",\"params\":{\"candidate\":\"The candidate for which the delegation is in support of\",\"delegator\":\"Who made this delegation\"},\"returns\":{\"_0\":\"If delegation is in top delegations (is counted)\"}},\"isSelectedCandidate(address)\":{\"custom:selector\":\"740d7d2a\",\"details\":\"Check whether the specifies address is currently a part of the active set\",\"params\":{\"candidate\":\"the address that we want to confirm is a part of the active set\"},\"returns\":{\"_0\":\"A boolean confirming whether the address is a part of the active set\"}},\"joinCandidates(uint256,uint256)\":{\"custom:selector\":\"1f2f83ad\",\"details\":\"Join the set of collator candidates\",\"params\":{\"amount\":\"The amount self-bonded by the caller to become a collator candidate\",\"candidateCount\":\"The number of candidates in the CandidatePool\"}},\"minDelegation()\":{\"custom:selector\":\"02985992\",\"details\":\"Get the minimum delegation amount\",\"returns\":{\"_0\":\"The minimum delegation amount\"}},\"points(uint256)\":{\"custom:selector\":\"9799b4e7\",\"details\":\"Total points awarded to all collators in a particular round\",\"params\":{\"round\":\"the round for which we are querying the points total\"},\"returns\":{\"_0\":\"The total points awarded to all collators in the round\"}},\"round()\":{\"custom:selector\":\"146ca531\",\"details\":\"Get the current round number\",\"returns\":{\"_0\":\"The current round number\"}},\"scheduleCandidateBondLess(uint256)\":{\"custom:selector\":\"60744ae0\",\"details\":\"Request to bond less for collator candidates\",\"params\":{\"less\":\"The amount to be subtracted from self-bond and unreserved\"}},\"scheduleDelegatorBondLess(address,uint256)\":{\"custom:selector\":\"c172fd2b\",\"details\":\"Request to bond less for delegators with respect to a specific collator candidate\",\"params\":{\"candidate\":\"The address of the collator candidate for which delegation shall decrease\",\"less\":\"The amount by which the delegation is decreased (upon execution)\"}},\"scheduleLeaveCandidates(uint256)\":{\"custom:selector\":\"b1a3c1b7\",\"details\":\"Request to leave the set of collator candidates\",\"params\":{\"candidateCount\":\"The number of candidates in the CandidatePool\"}},\"scheduleLeaveDelegators()\":{\"custom:selector\":\"f939dadb\",\"details\":\"Request to leave the set of delegators\"},\"scheduleRevokeDelegation(address)\":{\"custom:selector\":\"1a1c740c\",\"details\":\"Request to revoke an existing delegation\",\"params\":{\"candidate\":\"The address of the collator candidate which will no longer be supported\"}},\"selectedCandidates()\":{\"custom:selector\":\"bcf868a6\",\"details\":\"Get the selected candidates for the current round\",\"returns\":{\"_0\":\"The selected candidate accounts\"}},\"setAutoCompound(address,uint8,uint256,uint256)\":{\"custom:selector\":\"faa1786f\",\"details\":\"Sets an auto-compound value for a delegation\",\"params\":{\"candidate\":\"The address of the supported collator candidate\",\"candidateAutoCompoundingDelegationCount\":\"The number of auto-compounding delegations in support of the candidate\",\"delegatorDelegationCount\":\"The number of existing delegations by the caller\",\"value\":\"The percent of reward that should be auto-compounded\"}}},\"title\":\"Pallet Parachain Staking Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelLeaveDelegators()\":{\"notice\":\"DEPRECATED use batch util with cancelDelegationRequest for all delegations\"},\"executeLeaveDelegators(address,uint256)\":{\"notice\":\"DEPRECATED use batch util with executeDelegationRequest for all delegations\"},\"scheduleLeaveDelegators()\":{\"notice\":\"DEPRECATED use batch util with scheduleRevokeDelegation for all delegations\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/StakingInterface.sol\":\"ParachainStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/StakingInterface.sol\":{\"keccak256\":\"0xdd6ededcaf8f449bbcd93ccb608dba867221a7f0b6efeb2e06e5474fd02816f9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://3fb761e7914cd6ef592045079ed71d6171c16e7bcd29f896aae307f5b61d4ca1\",\"dweb:/ipfs/Qmf9uaeMdYXFvRXMN6x6Ex3tjzqCQUtDF7VWznEpXNwe4L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"cancelLeaveDelegators()": {
								"notice": "DEPRECATED use batch util with cancelDelegationRequest for all delegations"
							},
							"executeLeaveDelegators(address,uint256)": {
								"notice": "DEPRECATED use batch util with executeDelegationRequest for all delegations"
							},
							"scheduleLeaveDelegators()": {
								"notice": "DEPRECATED use batch util with scheduleRevokeDelegation for all delegations"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"interfaces/StakingInterface.sol": {
				"ast": {
					"absolutePath": "interfaces/StakingInterface.sol",
					"exportedSymbols": {
						"PARACHAIN_STAKING_ADDRESS": [
							5
						],
						"PARACHAIN_STAKING_CONTRACT": [
							12
						],
						"ParachainStaking": [
							317
						]
					},
					"id": 318,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"constant": true,
							"id": 5,
							"mutability": "constant",
							"name": "PARACHAIN_STAKING_ADDRESS",
							"nameLocation": "138:25:0",
							"nodeType": "VariableDeclaration",
							"scope": 318,
							"src": "121:87:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 3,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "121:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383030",
								"id": 4,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "166:42:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x0000000000000000000000000000000000000800"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 12,
							"mutability": "constant",
							"name": "PARACHAIN_STAKING_CONTRACT",
							"nameLocation": "291:26:0",
							"nodeType": "VariableDeclaration",
							"scope": 318,
							"src": "265:106:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_ParachainStaking_$317",
								"typeString": "contract ParachainStaking"
							},
							"typeName": {
								"id": 8,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 7,
									"name": "ParachainStaking",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 317,
									"src": "265:16:0"
								},
								"referencedDeclaration": 317,
								"src": "265:16:0",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_ParachainStaking_$317",
									"typeString": "contract ParachainStaking"
								}
							},
							"value": {
								"arguments": [
									{
										"id": 10,
										"name": "PARACHAIN_STAKING_ADDRESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5,
										"src": "343:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 9,
									"name": "ParachainStaking",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 317,
									"src": "320:16:0",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_ParachainStaking_$317_$",
										"typeString": "type(contract ParachainStaking)"
									}
								},
								"id": 11,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"names": [],
								"nodeType": "FunctionCall",
								"src": "320:51:0",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_ParachainStaking_$317",
									"typeString": "contract ParachainStaking"
								}
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "376:356:0",
								"text": "@author The Moonbeam Team\n @title Pallet Parachain Staking Interface\n @dev The interface through which solidity contracts will interact with Parachain Staking\n We follow this same interface including four-byte function selectors, in the precompile that\n wraps the pallet\n @custom:address 0x0000000000000000000000000000000000000800"
							},
							"fullyImplemented": false,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "ParachainStaking",
							"nameLocation": "742:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "766:262:0",
										"text": "@dev Check whether the specified address is currently a staking delegator\n @custom:selector fd8ab482\n @param delegator the address that we want to confirm is a delegator\n @return A boolean confirming whether the address is a delegator"
									},
									"functionSelector": "fd8ab482",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isDelegator",
									"nameLocation": "1043:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "1063:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1055:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:19:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1097:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:6:0"
									},
									"scope": 317,
									"src": "1034:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1111:280:0",
										"text": "@dev Check whether the specified address is currently a collator candidate\n @custom:selector d51b9e93\n @param candidate the address that we want to confirm is a collator andidate\n @return A boolean confirming whether the address is a collator candidate"
									},
									"functionSelector": "d51b9e93",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCandidate",
									"nameLocation": "1406:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "1426:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1418:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:19:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1460:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:6:0"
									},
									"scope": 317,
									"src": "1397:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1474:293:0",
										"text": "@dev Check whether the specifies address is currently a part of the active set\n @custom:selector 740d7d2a\n @param candidate the address that we want to confirm is a part of the active set\n @return A boolean confirming whether the address is a part of the active set"
									},
									"functionSelector": "740d7d2a",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSelectedCandidate",
									"nameLocation": "1782:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "1810:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1802:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1801:19:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 34,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:6:0"
									},
									"scope": 317,
									"src": "1773:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1885:250:0",
										"text": "@dev Total points awarded to all collators in a particular round\n @custom:selector 9799b4e7\n @param round the round for which we are querying the points total\n @return The total points awarded to all collators in the round"
									},
									"functionSelector": "9799b4e7",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "points",
									"nameLocation": "2150:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "round",
												"nameLocation": "2165:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2157:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2195:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:0"
									},
									"scope": 317,
									"src": "2141:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "2212:333:0",
										"text": "@dev The amount delegated in support of the candidate by the delegator\n @custom:selector a73e51bc\n @param delegator Who made this delegation\n @param candidate The candidate for which the delegation is in support of\n @return The amount of the delegation in support of the candidate by the delegator"
									},
									"functionSelector": "a73e51bc",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationAmount",
									"nameLocation": "2560:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "2585:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2577:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "2604:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2596:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:38:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:9:0"
									},
									"scope": 317,
									"src": "2551:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2682:291:0",
										"text": "@dev Whether the delegation is in the top delegations\n @custom:selector 91cc8657\n @param delegator Who made this delegation\n @param candidate The candidate for which the delegation is in support of\n @return If delegation is in top delegations (is counted)"
									},
									"functionSelector": "91cc8657",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInTopDelegations",
									"nameLocation": "2988:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "3015:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "3007:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "3034:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "3026:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3006:38:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "3095:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:6:0"
									},
									"scope": 317,
									"src": "2979:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "3109:124:0",
										"text": "@dev Get the minimum delegation amount\n @custom:selector 02985992\n @return The minimum delegation amount"
									},
									"functionSelector": "02985992",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minDelegation",
									"nameLocation": "3248:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3286:9:0"
									},
									"scope": 317,
									"src": "3239:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3304:126:0",
										"text": "@dev Get the CandidateCount weight hint\n @custom:selector a9a981a3\n @return The CandidateCount weight hint"
									},
									"functionSelector": "a9a981a3",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateCount",
									"nameLocation": "3445:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3459:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3485:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:9:0"
									},
									"scope": 317,
									"src": "3436:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3502:114:0",
										"text": "@dev Get the current round number\n @custom:selector 146ca531\n @return The current round number"
									},
									"functionSelector": "146ca531",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "round",
									"nameLocation": "3631:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3636:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3661:9:0"
									},
									"scope": 317,
									"src": "3622:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "3679:237:0",
										"text": "@dev Get the CandidateDelegationCount weight hint\n @custom:selector 2ec087eb\n @param candidate The address for which we are querying the nomination count\n @return The number of nominations backing the collator"
									},
									"functionSelector": "2ec087eb",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateDelegationCount",
									"nameLocation": "3931:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "3964:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3956:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:19:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4025:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 88,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4025:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4024:8:0"
									},
									"scope": 317,
									"src": "3922:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "4041:278:0",
										"text": "@dev Get the CandidateAutoCompoundingDelegationCount weight hint\n @custom:selector 905f0806\n @param candidate The address for which we are querying the auto compounding\n     delegation count\n @return The number of auto compounding delegations"
									},
									"functionSelector": "905f0806",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateAutoCompoundingDelegationCount",
									"nameLocation": "4334:39:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "4382:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4374:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:19:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4443:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 96,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4443:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:8:0"
									},
									"scope": 317,
									"src": "4325:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "4459:238:0",
										"text": "@dev Get the DelegatorDelegationCount weight hint\n @custom:selector 067ec822\n @param delegator The address for which we are querying the delegation count\n @return The number of delegations made by the delegator"
									},
									"functionSelector": "067ec822",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorDelegationCount",
									"nameLocation": "4712:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "4745:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4737:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:19:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4806:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:9:0"
									},
									"scope": 317,
									"src": "4703:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4823:142:0",
										"text": "@dev Get the selected candidates for the current round\n @custom:selector bcf868a6\n @return The selected candidate accounts"
									},
									"functionSelector": "bcf868a6",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selectedCandidates",
									"nameLocation": "4980:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4998:2:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5024:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5024:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "5024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:18:0"
									},
									"scope": 317,
									"src": "4971:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "5050:328:0",
										"text": "@dev Whether there exists a pending request for a delegation made by a delegator\n @custom:selector 3b16def8\n @param delegator the delegator that made the delegation\n @param candidate the candidate for which the delegation was made\n @return Whether a pending request exists for such delegation"
									},
									"functionSelector": "3b16def8",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationRequestIsPending",
									"nameLocation": "5393:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "5428:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5420:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "5447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5439:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:38:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5508:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:6:0"
									},
									"scope": 317,
									"src": "5384:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "5522:239:0",
										"text": "@dev Whether there exists a pending exit for candidate\n @custom:selector 43443682\n @param candidate the candidate for which the exit request was made\n @return Whether a pending request exists for such delegation"
									},
									"functionSelector": "43443682",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateExitIsPending",
									"nameLocation": "5776:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "5807:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "5799:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5798:19:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "5868:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5867:6:0"
									},
									"scope": 317,
									"src": "5767:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "5882:254:0",
										"text": "@dev Whether there exists a pending bond less request made by a candidate\n @custom:selector d0deec11\n @param candidate the candidate which made the request\n @return Whether a pending bond less request was made by the candidate"
									},
									"functionSelector": "d0deec11",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateRequestIsPending",
									"nameLocation": "6151:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "6185:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "6177:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6176:19:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "6246:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:6:0"
									},
									"scope": 317,
									"src": "6142:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "6260:329:0",
										"text": "@dev Returns the percent value of auto-compound set for a delegation\n @custom:selector b4d4c7fd\n @param delegator the delegator that made the delegation\n @param candidate the candidate for which the delegation was made\n @return Percent of rewarded amount that is auto-compounded on each payout"
									},
									"functionSelector": "b4d4c7fd",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationAutoCompound",
									"nameLocation": "6604:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "6635:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6627:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "6654:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6646:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6626:38:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "6715:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 147,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6715:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:7:0"
									},
									"scope": 317,
									"src": "6595:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "6730:247:0",
										"text": "@dev Join the set of collator candidates\n @custom:selector 1f2f83ad\n @param amount The amount self-bonded by the caller to become a collator candidate\n @param candidateCount The number of candidates in the CandidatePool"
									},
									"functionSelector": "1f2f83ad",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "joinCandidates",
									"nameLocation": "6992:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7015:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "7007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "candidateCount",
												"nameLocation": "7031:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "7023:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:40:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7055:0:0"
									},
									"scope": 317,
									"src": "6983:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "7064:168:0",
										"text": "@dev Request to leave the set of collator candidates\n @custom:selector b1a3c1b7\n @param candidateCount The number of candidates in the CandidatePool"
									},
									"functionSelector": "b1a3c1b7",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scheduleLeaveCandidates",
									"nameLocation": "7247:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "candidateCount",
												"nameLocation": "7279:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "7271:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7270:24:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7303:0:0"
									},
									"scope": 317,
									"src": "7238:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "7312:302:0",
										"text": "@dev Execute due request to leave the set of collator candidates\n @custom:selector 3867f308\n @param candidate The candidate address for which the pending exit request will be executed\n @param candidateDelegationCount The number of delegations for the candidate to be revoked"
									},
									"functionSelector": "3867f308",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeLeaveCandidates",
									"nameLocation": "7629:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "7670:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "7662:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "candidateDelegationCount",
												"nameLocation": "7698:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "7690:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7651:78:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:0:0"
									},
									"scope": 317,
									"src": "7620:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "7747:175:0",
										"text": "@dev Cancel request to leave the set of collator candidates\n @custom:selector 9c76ebb4\n @param candidateCount The number of candidates in the CandidatePool"
									},
									"functionSelector": "9c76ebb4",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelLeaveCandidates",
									"nameLocation": "7937:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "candidateCount",
												"nameLocation": "7967:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7959:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7958:24:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7991:0:0"
									},
									"scope": 317,
									"src": "7928:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "8000:110:0",
										"text": "@dev Temporarily leave the set of collator candidates without unbonding\n @custom:selector a6485ccd"
									},
									"functionSelector": "a6485ccd",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goOffline",
									"nameLocation": "8125:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8134:2:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8145:0:0"
									},
									"scope": 317,
									"src": "8116:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "8154:118:0",
										"text": "@dev Rejoin the set of collator candidates if previously had called `goOffline`\n @custom:selector 6e5b676b"
									},
									"functionSelector": "6e5b676b",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goOnline",
									"nameLocation": "8287:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8295:2:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8306:0:0"
									},
									"scope": 317,
									"src": "8278:29:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "8315:143:0",
										"text": "@dev Request to bond more for collator candidates\n @custom:selector a52c8643\n @param more The additional amount self-bonded"
									},
									"functionSelector": "a52c8643",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "candidateBondMore",
									"nameLocation": "8473:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "more",
												"nameLocation": "8499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "8491:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8490:14:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8513:0:0"
									},
									"scope": 317,
									"src": "8464:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "8522:167:0",
										"text": "@dev Request to bond less for collator candidates\n @custom:selector 60744ae0\n @param less The amount to be subtracted from self-bond and unreserved"
									},
									"functionSelector": "60744ae0",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scheduleCandidateBondLess",
									"nameLocation": "8704:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "less",
												"nameLocation": "8738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "8730:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8729:14:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8752:0:0"
									},
									"scope": 317,
									"src": "8695:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "8761:177:0",
										"text": "@dev Execute pending candidate bond request\n @custom:selector 2e290290\n @param candidate The address for the candidate for which the request will be executed"
									},
									"functionSelector": "2e290290",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCandidateBondLess",
									"nameLocation": "8953:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "8986:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8978:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:19:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9005:0:0"
									},
									"scope": 317,
									"src": "8944:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "9014:81:0",
										"text": "@dev Cancel pending candidate bond request\n @custom:selector b5ad5f07"
									},
									"functionSelector": "b5ad5f07",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelCandidateBondLess",
									"nameLocation": "9110:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9133:2:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9144:0:0"
									},
									"scope": 317,
									"src": "9101:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "9153:433:0",
										"text": "@dev Make a delegation in support of a collator candidate\n @custom:selector 829f5ee3\n @param candidate The address of the supported collator candidate\n @param amount The amount bonded in support of the collator candidate\n @param candidateDelegationCount The number of delegations in support of the candidate\n @param delegatorDelegationCount The number of existing delegations by the caller"
									},
									"functionSelector": "829f5ee3",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "9601:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "9628:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9620:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "candidateDelegationCount",
												"nameLocation": "9681:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9673:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "delegatorDelegationCount",
												"nameLocation": "9724:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9716:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9609:146:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9764:0:0"
									},
									"scope": 317,
									"src": "9592:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "9773:651:0",
										"text": "@dev Make a delegation in support of a collator candidate\n @custom:selector 4b8bc9bf\n @param candidate The address of the supported collator candidate\n @param amount The amount bonded in support of the collator candidate\n @param autoCompound The percent of reward that should be auto-compounded\n @param candidateDelegationCount The number of delegations in support of the candidate\n @param candidateAutoCompoundingDelegationCount The number of auto-compounding delegations\n in support of the candidate\n @param delegatorDelegationCount The number of existing delegations by the caller"
									},
									"functionSelector": "4b8bc9bf",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateWithAutoCompound",
									"nameLocation": "10439:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "10482:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10474:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10510:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10502:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "autoCompound",
												"nameLocation": "10533:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10527:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 226,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10527:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "candidateDelegationCount",
												"nameLocation": "10564:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10556:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "candidateAutoCompoundingDelegationCount",
												"nameLocation": "10607:39:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10599:47:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "delegatorDelegationCount",
												"nameLocation": "10665:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "10657:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10463:233:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10705:0:0"
									},
									"scope": 317,
									"src": "10430:276:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "10714:175:0",
										"text": "@notice DEPRECATED use batch util with scheduleRevokeDelegation for all delegations\n @dev Request to leave the set of delegators\n @custom:selector f939dadb"
									},
									"functionSelector": "f939dadb",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scheduleLeaveDelegators",
									"nameLocation": "10904:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10927:2:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10938:0:0"
									},
									"scope": 317,
									"src": "10895:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "10947:359:0",
										"text": "@notice DEPRECATED use batch util with executeDelegationRequest for all delegations\n @dev Execute request to leave the set of delegators and revoke all delegations\n @custom:selector fb1e2bf9\n @param delegator The leaving delegator\n @param delegatorDelegationCount The number of active delegations to be revoked by delegator"
									},
									"functionSelector": "fb1e2bf9",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeLeaveDelegators",
									"nameLocation": "11321:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "11362:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "11354:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "delegatorDelegationCount",
												"nameLocation": "11390:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "11382:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11343:78:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11430:0:0"
									},
									"scope": 317,
									"src": "11312:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "11439:181:0",
										"text": "@notice DEPRECATED use batch util with cancelDelegationRequest for all delegations\n @dev Cancel request to leave the set of delegators\n @custom:selector f7421284"
									},
									"functionSelector": "f7421284",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelLeaveDelegators",
									"nameLocation": "11635:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11656:2:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11667:0:0"
									},
									"scope": 317,
									"src": "11626:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "11676:182:0",
										"text": "@dev Request to revoke an existing delegation\n @custom:selector 1a1c740c\n @param candidate The address of the collator candidate which will no longer be supported"
									},
									"functionSelector": "1a1c740c",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scheduleRevokeDelegation",
									"nameLocation": "11873:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "11906:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "11898:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11897:19:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11925:0:0"
									},
									"scope": 317,
									"src": "11864:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "11934:283:0",
										"text": "@dev Bond more for delegators with respect to a specific collator candidate\n @custom:selector 0465135b\n @param candidate The address of the collator candidate for which delegation shall increase\n @param more The amount by which the delegation is increased"
									},
									"functionSelector": "0465135b",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorBondMore",
									"nameLocation": "12232:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "12258:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "12250:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "more",
												"nameLocation": "12277:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "12269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12249:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12291:0:0"
									},
									"scope": 317,
									"src": "12223:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "12300:311:0",
										"text": "@dev Request to bond less for delegators with respect to a specific collator candidate\n @custom:selector c172fd2b\n @param candidate The address of the collator candidate for which delegation shall decrease\n @param less The amount by which the delegation is decreased (upon execution)"
									},
									"functionSelector": "c172fd2b",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scheduleDelegatorBondLess",
									"nameLocation": "12626:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "12660:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "12652:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "less",
												"nameLocation": "12679:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "12671:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12651:33:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12702:0:0"
									},
									"scope": 317,
									"src": "12617:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "12711:210:0",
										"text": "@dev Execute pending delegation request (if exists && is due)\n @custom:selector e98c8abe\n @param delegator The address of the delegator\n @param candidate The address of the candidate"
									},
									"functionSelector": "e98c8abe",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeDelegationRequest",
									"nameLocation": "12936:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "12969:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "12961:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "12988:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "12980:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12960:38:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13016:0:0"
									},
									"scope": 317,
									"src": "12927:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "13025:177:0",
										"text": "@dev Cancel pending delegation request (already made in support of input by caller)\n @custom:selector c90eee83\n @param candidate The address of the candidate"
									},
									"functionSelector": "c90eee83",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelDelegationRequest",
									"nameLocation": "13217:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "13249:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "13241:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13240:19:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13268:0:0"
									},
									"scope": 317,
									"src": "13208:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "13277:463:0",
										"text": "@dev Sets an auto-compound value for a delegation\n @custom:selector faa1786f\n @param candidate The address of the supported collator candidate\n @param value The percent of reward that should be auto-compounded\n @param candidateAutoCompoundingDelegationCount The number of auto-compounding delegations\n in support of the candidate\n @param delegatorDelegationCount The number of existing delegations by the caller"
									},
									"functionSelector": "faa1786f",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAutoCompound",
									"nameLocation": "13755:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "13789:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "13781:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13815:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "13809:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 292,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "candidateAutoCompoundingDelegationCount",
												"nameLocation": "13839:39:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "13831:47:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "delegatorDelegationCount",
												"nameLocation": "13897:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "13889:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13770:158:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13937:0:0"
									},
									"scope": 317,
									"src": "13746:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "13946:219:0",
										"text": "@dev Fetch the total staked amount of a delegator, regardless of the\n candidate.\n @custom:selector e6861713\n @param delegator Address of the delegator.\n @return Total amount of stake."
									},
									"functionSelector": "e6861713",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatorTotalStaked",
									"nameLocation": "14180:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "14212:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "14204:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14203:19:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "14273:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14272:9:0"
									},
									"scope": 317,
									"src": "14171:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "14290:179:0",
										"text": "@dev Fetch the total staked towards a candidate.\n @custom:selector bc5a1043\n @param candidate Address of the candidate.\n @return Total amount of stake."
									},
									"functionSelector": "bc5a1043",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCandidateTotalCounted",
									"nameLocation": "14484:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "14517:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "14509:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14508:19:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "14578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14577:9:0"
									},
									"scope": 317,
									"src": "14475:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 318,
							"src": "732:13858:0",
							"usedErrors": []
						}
					],
					"src": "42:14548:0"
				},
				"id": 0
			}
		}
	}
}